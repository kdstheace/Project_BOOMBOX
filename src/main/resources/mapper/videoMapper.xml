<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.boom.box.dao.VideoMapper">

<insert id="insertVideo" parameterType="video">
	<selectKey keyProperty="video_id" resultType="int" order="BEFORE">
		select
			video_seq.nextval
		from
			dual
	</selectKey>
	insert into video_tb(
		video_id
		,video_user_id
		,video_title
		,video_content
		,video_urlS
		,video_urlO
		,video_class
		,video_public
		,video_ageLimit
		,video_thumbnailS
		,video_thumbnailO
		,video_copyright
		,video_motion
	)values(
	    #{video_id}
	    ,#{video_user_id}
	    ,#{video_title}
	    ,#{video_content}
	    ,#{video_urlS}
	    ,#{video_urlO}
	    ,#{video_class}
	    ,#{video_public}
	    ,#{video_ageLimit}
	    ,#{video_thumbnailS}
	    ,#{video_thumbnailO}
	    ,#{video_copyright}
	    ,#{video_motion}
	)
</insert>

<insert id="insertVideoInterest" parameterType="video">
	insert into
		videoInterest_tb(
			videoInterest_id
			,videoInterest_video_id
			,videoInterest_interest
		)
		select
			videoInterest_seq.nextval
			, A.* from (
		<foreach collection="videoInterest_interest" item="arr" separator="UNION ALL ">
			select
				#{video_id} as videoInterest_video_id
				,#{arr} as videoInterest_interest
			from
				dual
		</foreach>
		) A
</insert>

<select id="selectVideoList" resultType="hashmap" parameterType="String">
	select
	    v.video_id as video_id
		,v.video_user_id as video_user_id
		,v.video_title as video_title
		,v.video_content as video_content
		,v.video_hit as video_hit
		,v.video_urlS as video_urlS 
		,v.video_urlO as video_urlO
		,to_char(video_inDate, 'yyyy-MM-dd') as video_inDate
		,v.video_class as video_class
		,v.video_public as video_public
		,v.video_ageLimit as video_ageLimit
		,v.video_thumbnailS as video_thumbnailS 
		,v.video_thumbnailO as video_thumbnailO
		,v.video_copyright as video_copyright
		,v.video_motion as video_motion
		,v.video_likeNum as video_likeNum
		,u.user_name as user_name
		,s.stage_profileImgS as stage_profileImgS
		,s.stage_profileImgO as stage_profileImgO
	from
	    video_tb v, user_tb u, stage_tb s
	where
		v.video_user_id = u.user_id
		and
		s.stage_user_id = u.user_id
		<if test="_parameter != null">
	and
		v.video_title like '%' || #{searchText} || '%'
		</if>
	order by
	    video_indate desc
</select>

<select id="selectVideoOne" parameterType="int" resultType="hashmap">
	select
	    v.video_id as video_id
		,v.video_user_id as video_user_id
		,v.video_title as video_title
		,v.video_content as video_content
		,v.video_hit as video_hit
		,v.video_urlS as video_urlS 
		,v.video_urlO as video_urlO
		,to_char(video_inDate, 'yyyy-MM-dd') as video_inDate
		,v.video_class as video_class
		,v.video_public as video_public
		,v.video_ageLimit as video_ageLimit
		,v.video_thumbnailS as video_thumbnailS 
		,v.video_thumbnailO as video_thumbnailO
		,v.video_copyright as video_copyright
		,v.video_motion as video_motion
		,v.video_likeNum as video_likeNum
		,u.user_name as user_name
	from
	    video_tb v, user_tb u
	where
		v.video_user_id = u.user_id
        and
        v.video_id = #{video_id}
</select>

<select id="selectVideoById" parameterType="int" resultType="video">
	select
	    video_urlS
	    , video_urlO
	    , video_thumbnailS
	    , video_thumbnailO
	from
	    video_tb
	where
	    video_id = #{video_id}
</select>

<select id="selectVideoCount" parameterType="String" resultType="int">
	select
		count(*)
	from
		video_tb
	<if test = "_parameter != null">
	where
		video_title like '%' || ${searchText} || '%'
	</if>
</select>

<delete id="deleteVideo" parameterType="int">

DELETE
FROM
	VIDEO_TB
WHERE
	VIDEO_ID = #{video_id}


</delete>

</mapper>
